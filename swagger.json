{
  "openapi": "3.0.0",
  "info": {
    "title": "API Rick and Morty",
    "description": "API for CRUD of characters from the cartoon Rick and Morty.",
    "termsOfService": "",
    "contact": {
      "email": "lviccari@outlook.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/character",
      "description": "prototype API"
    },
    {
      "url": "https://dashboard.heroku.com/apps/api-ricknmorty-lucas",
      "description": "API production server"
    }
  ],
  "paths": {
    "/All": {
      "get": {
        "summary": "List of all characters",
        "description": "This route is responsable by bringing all characters",
        "tags": ["Characters"],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Characters"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ByID/{id}": {
      "get": {
        "summary": "Busca uma paleta pelo ID",
        "description": "Rota respons√°vel por buscar uma paleta pelo ID",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID request to find the character",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Characters"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "post": {
        "summary": "Cadastrate a new character",
        "description": "This Route creates a new character",
        "tags": ["Characters"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Characters"
              },
              "examples": {
                "Characters": {
                  "value": {
                    "name": "Morty",
                    "username": "Adonias",
                    "email": "ma@example",
                    "password": "12345",
                    "photo": "test photo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Characters"
                }
              }
            }
          }
        }
      }
    },
    "/{id}": {
      "put": {
        "summary": "Edit a character by id",
        "description": "This route make a update to the character by his ID.",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of character to update ",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Characters"
              },
              "examples": {
                "Paletas": {
                  "value": {
                    "name": "Morty",
                    "username": "Edited One",
                    "email": "ma@example",
                    "password": "54321",
                    "photo": "test photo edited"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Paletas"
                }
              }
            }
          }
        }
      }
    },
    "/{id} ": {
      "delete": {
        "summary": "Delete Characters by ID",
        "description": "This route deletes a character by its id",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of character by delete",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Characters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          }
        }
      }
    }
  }
}
